###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         28/Aug/2018  19:56:55
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\main.cpp
#    Command line =  
#        -f C:\Users\Sergey\AppData\Local\Temp\EWD03.tmp
#        (E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\main.cpp -lcN
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\List -lb
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\List -o
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Application\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Common\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\AHardware\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\AHardware\GpioPort\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\AHardware\IrqController\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\CMSIS\ -Ol --c++
#        --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\List\main.lst
#    Object file  =  E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\Obj\main.o
#
###############################################################################

E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\main.cpp
      1          #include "CMSIS/stm32f411xe.h"
      2          #include "led1.hpp"
      3          
      4          extern "C" {
      5            int __low_level_init(void) {
      6            //Switch on external 16 MHz oscilator    
      7            RCC->CR |= RCC_CR_HSION;
      8            while ((RCC->CR & RCC_CR_HSIRDY) != RCC_CR_HSIRDY) {
      9            }
     10            //Swicth system clock on extrenal oscilator
     11            RCC->CFGR |= RCC_CFGR_SW_HSI;
     12            while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI) {
     13            }
     14            //Swicth on clock on PortA and PortC 
     15            RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIOAEN);
     16            RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN ;
     17            //LED1 on PortA.5, set PortA.5 as output
     18            GPIOA->MODER |= GPIO_MODER_MODE5_0;
     19            /* LED2 on PortC.9, LED3 on PortC.8, LED4 on PortC.5 so set PortC.5,8,9 as output */
     20            GPIOC->MODER |= (GPIO_MODER_MODE9_0 | GPIO_MODER_MODE5_0 | GPIO_MODER_MODE8_0);
     21              
     22            return 1;
     23          }
     24          }
     25          
     26          
     27          void Delay(tU32 duration)
     28          {
     29            for (tU32 i = 0; i < duration; i++)
     30            {    
     31            }
     32          }
     33          
     34          int main()
     35          {
     36            using utils::operator""msec;
     37            Led1 &led = Led1::GetInstance();
     38            for(;;)
     39            {
     40              led.Toggle();  
     41              Delay(1000msec);
     42            }
     43            return 0;
     44          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Delay(tU32)
       0   GpioPort<GPIO_TypeDef, 5UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPort<GPIO_TypeDef, 5UL>::Toggle()
         8   -> utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<GPIO_TypeDef, 5UL>::subobject GpioPort(GPIO_TypeDef &)
         8   -> GpioPort<GPIO_TypeDef, 5UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPortA<5UL>::GpioPortA()
         8   -> GpioPort<GPIO_TypeDef, 5UL>::subobject GpioPort(GPIO_TypeDef &)
       8   GpioPortA<5UL>::subobject GpioPortA()
         8   -> GpioPortA<5UL>::GpioPortA()
       8   Led1::Led1()
         8   -> GpioPortA<5UL>::subobject GpioPortA()
       8   Singleton<Led1>::GetInstance()
         8   -> Led1::Led1()
       0   __low_level_init
       8   main
         8   -> Delay(tU32)
         8   -> GpioPort<GPIO_TypeDef, 5UL>::Toggle()
         8   -> Singleton<Led1>::GetInstance()
      16   utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
        16   -> __aeabi_assert
        16   -> __iar_EmptyStepPoint


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
      12  Delay(tU32)
       4  GpioPort<GPIO_TypeDef, 5UL>::GpioPort(GPIO_TypeDef &)
      14  GpioPort<GPIO_TypeDef, 5UL>::Toggle()
       8  GpioPort<GPIO_TypeDef, 5UL>::subobject GpioPort(GPIO_TypeDef &)
      20  GpioPortA<5UL>::GpioPortA()
       8  GpioPortA<5UL>::subobject GpioPortA()
      14  Led1::Led1()
      32  Singleton<Led1>::GetInstance()
      78  __low_level_init
       4  instance
      22  main
      48  utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
      85  -- Other

 
   5 bytes in section .bss
  84 bytes in section .rodata
 288 bytes in section .text
 
 140 bytes of CODE  memory (+ 148 bytes shared)
   0 bytes of CONST memory (+  84 bytes shared)
   0 bytes of DATA  memory (+   5 bytes shared)

Errors: none
Warnings: 1
