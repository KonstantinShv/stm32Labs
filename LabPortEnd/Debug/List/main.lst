###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         28/Aug/2018  20:09:49
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\main.cpp
#    Command line =  
#        -f C:\Users\Sergey\AppData\Local\Temp\EWDEB5.tmp
#        (E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\main.cpp -lcN
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\List -lb
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\List -o
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\Obj --no_unroll
#        --no_inline --no_tbaa --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Application\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Common\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\AHardware\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\AHardware\GpioPort\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\AHardware\IrqController\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\CMSIS\ -Om --c++
#        --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\List\main.lst
#    Object file  =  E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\Obj\main.o
#
###############################################################################

E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\main.cpp
      1          #include "CMSIS/stm32f411xe.h"
      2          #include "led1.hpp"
      3          
      4          extern "C" 
      5          {
      6            int __low_level_init(void) 
      7            {
      8              //Switch on external 16 MHz oscilator    
      9              RCC->CR |= RCC_CR_HSION;
     10              while ((RCC->CR & RCC_CR_HSIRDY) != RCC_CR_HSIRDY) 
     11              {
     12              }
     13              //Swicth system clock on extrenal oscilator
     14              RCC->CFGR |= RCC_CFGR_SW_HSI;
     15              while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI) 
     16              {
     17              }
     18              //Swicth on clock on PortA and PortC 
     19              RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIOAEN);
     20              RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN ;
     21              //LED1 on PortA.5, set PortA.5 as output
     22              GPIOA->MODER |= GPIO_MODER_MODE5_0;
     23              //LED2 on PortC.9, LED3 on PortC.8, LED4 on PortC.5 set PortC.5,8,9 as output 
     24              GPIOC->MODER |= (GPIO_MODER_MODE9_0 | GPIO_MODER_MODE5_0 | GPIO_MODER_MODE8_0);
     25              
     26              return 1;
     27            }
     28          }
     29          
     30          
     31          void Delay(tU32 duration)
     32          {
     33            for (tU32 i = 0; i < duration; i++)
     34            {    
     35            }
     36          }
     37          
     38          int main()
     39          {
     40            using utils::operator""msec;
     41              
     42            for(;;)
     43            {
     44              Led1::GetInstance().Toggle();   
     45              Delay(1000msec);
     46            }
     47            return 0;
     48          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Delay(tU32)
       0   GpioPort<GPIO_TypeDef, 5UL>::GpioPort(GPIO_TypeDef &)
       0   GpioPort<GPIO_TypeDef, 5UL>::Toggle()
         0   -> utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   GpioPort<GPIO_TypeDef, 5UL>::subobject GpioPort(GPIO_TypeDef &)
         0   -> GpioPort<GPIO_TypeDef, 5UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPortA<5UL>::GpioPortA()
         8   -> GpioPort<GPIO_TypeDef, 5UL>::subobject GpioPort(GPIO_TypeDef &)
       0   GpioPortA<5UL>::subobject GpioPortA()
         0   -> GpioPortA<5UL>::GpioPortA()
       8   Led1::Led1()
         8   -> GpioPortA<5UL>::subobject GpioPortA()
       8   Singleton<Led1>::GetInstance()
         8   -> Led1::Led1()
       0   __low_level_init
       8   main
         8   -> Delay(tU32)
         8   -> GpioPort<GPIO_TypeDef, 5UL>::Toggle()
         8   -> Singleton<Led1>::GetInstance()
      16   utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
        16   -> __aeabi_assert
        16   -> __iar_EmptyStepPoint


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
      12  Delay(tU32)
       4  GpioPort<GPIO_TypeDef, 5UL>::GpioPort(GPIO_TypeDef &)
      10  GpioPort<GPIO_TypeDef, 5UL>::Toggle()
       4  GpioPort<GPIO_TypeDef, 5UL>::subobject GpioPort(GPIO_TypeDef &)
      20  GpioPortA<5UL>::GpioPortA()
       4  GpioPortA<5UL>::subobject GpioPortA()
      12  Led1::Led1()
      36  Singleton<Led1>::GetInstance()
      72  __low_level_init
       4  instance
      18  main
      48  utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
      85  -- Other

 
   5 bytes in section .bss
  84 bytes in section .rodata
 256 bytes in section .text
 
 118 bytes of CODE  memory (+ 138 bytes shared)
   0 bytes of CONST memory (+  84 bytes shared)
   0 bytes of DATA  memory (+   5 bytes shared)

Errors: none
Warnings: 1
