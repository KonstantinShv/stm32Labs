###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         01/Sep/2018  13:20:13
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\main.cpp
#    Command line =  
#        -f C:\Users\Sergey\AppData\Local\Temp\EWC20B.tmp
#        (E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\main.cpp -lcN
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\List -lb
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\List -o
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Application\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Common\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\AHardware\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\AHardware\GpioPort\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\AHardware\IrqController\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\CMSIS\ -Ol --c++
#        --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  
#        E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\List\main.lst
#    Object file  =  E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\Debug\Obj\main.o
#
###############################################################################

E:\Projects\ARM_LAB\stm32Labs\LabPortEnd\main.cpp
      1          #include "CMSIS/stm32f411xe.h"
      2          #include "leds.hpp"
      3          #include "userbutton.hpp"
      4          
      5          extern "C" 
      6          {
      7            int __low_level_init(void) 
      8            {
      9              //Switch on external 16 MHz oscilator    
     10              RCC->CR |= RCC_CR_HSION;
     11              while ((RCC->CR & RCC_CR_HSIRDY) != RCC_CR_HSIRDY) 
     12              {
     13              }
     14              //Swicth system clock on extrenal oscilator
     15              RCC->CFGR |= RCC_CFGR_SW_HSI;
     16              while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI) 
     17              {
     18              }
     19              //Swicth on clock on PortA and PortC 
     20              RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIOAEN);
     21              RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN ;
     22              //LED1 on PortA.5, set PortA.5 as output
     23              GPIOA->MODER |= GPIO_MODER_MODE5_0;
     24              //LED2 on PortC.9, LED3 on PortC.8, LED4 on PortC.5 set PortC.5,8,9 as output 
     25              GPIOC->MODER |= (GPIO_MODER_MODE9_0 | GPIO_MODER_MODE5_0 | GPIO_MODER_MODE8_0);
     26              //Enabled clock source on ADC1
     27              RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
     28              //Enable internal temperature sensor
     29              ADC->CCR |= ADC_CCR_TSVREFE;
     30              //Set flag End of Conversion after each refular channel conversion
     31              ADC1->CR2 |= ADC_CR2_EOCS;
     32              //Sample rate is 84 cycles for cahnnel 18 (Internal temperature sensor)
     33              ADC1->SMPR1 |= ADC_SMPR1_SMP18_2;
     34              //1 measurement of channel 18 (Internal temperature sensor)
     35              ADC1->SQR1 = ADC_SQR1_L_0;
     36              ADC1->SQR3 |= (ADC_SQR3_SQ1_1 | ADC_SQR3_SQ1_4);
     37              
     38              return 1;
     39            }
     40          }
     41          
     42          
     43          void Delay(tU32 duration)
     44          {
     45            for (tU32 i = 0U; i < duration; i++)
     46            {    
     47            }
     48          }
     49          
     50          int main()
     51          {
     52            using utils::operator""msec;
     53              
     54            for(;;)
     55            {
     56              if (UserButton::GetInstance().IsPressed())
     57              {
     58                Led1::GetInstance().Toggle();         
     59              } 
     60              Delay(250msec);
     61            }
     62            return 0;
     63          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Button::Button(IPort &)
       8   Button::IsPressed() const
         8   -- Indirect call
       8   Button::subobject Button(IPort &)
         8   -> Button::Button(IPort &)
       0   Delay(tU32)
       8   GpioPort<13UL>::Clear()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<13UL>::GetState() const
         8   -> utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
      16   GpioPort<13UL>::GpioPort(GPIO_TypeDef &)
        16   -> IPort::subobject IPort()
       8   GpioPort<13UL>::Set()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   GpioPort<13UL>::SetMode(PortMode)
       8   GpioPort<13UL>::Toggle()
         8   -> utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<13UL>::subobject GpioPort(GPIO_TypeDef &)
         8   -> GpioPort<13UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPort<5UL>::Clear()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<5UL>::GetState() const
         8   -> utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
      16   GpioPort<5UL>::GpioPort(GPIO_TypeDef &)
        16   -> IPort::subobject IPort()
       8   GpioPort<5UL>::Set()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   GpioPort<5UL>::SetMode(PortMode)
       8   GpioPort<5UL>::Toggle()
         8   -> utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<5UL>::subobject GpioPort(GPIO_TypeDef &)
         8   -> GpioPort<5UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPortA<5UL>::GpioPortA()
         8   -> GpioPort<5UL>::subobject GpioPort(GPIO_TypeDef &)
       8   GpioPortC<13UL>::GpioPortC()
         8   -> GpioPort<13UL>::subobject GpioPort(GPIO_TypeDef &)
       0   IPort::IPort()
       8   IPort::subobject IPort()
         8   -> IPort::IPort()
       8   Led1::Led1()
         8   -> Led::subobject Led(IPort &)
         8   -> Singleton<GpioPortA<5UL>>::GetInstance()
       0   Led::Led(IPort &)
       8   Led::Toggle()
         8   -- Indirect call
       8   Led::subobject Led(IPort &)
         8   -> Led::Led(IPort &)
       8   Singleton<GpioPortA<5UL>>::GetInstance()
         8   -> GpioPortA<5UL>::GpioPortA()
       8   Singleton<GpioPortC<13UL>>::GetInstance()
         8   -> GpioPortC<13UL>::GpioPortC()
       8   Singleton<Led1>::GetInstance()
         8   -> Led1::Led1()
       8   Singleton<UserButton>::GetInstance()
         8   -> UserButton::UserButton()
       8   UserButton::UserButton()
         8   -> Button::subobject Button(IPort &)
         8   -> Singleton<GpioPortC<13UL>>::GetInstance()
       0   __low_level_init
       8   main
         8   -> Button::IsPressed() const
         8   -> Delay(tU32)
         8   -> Led::Toggle()
         8   -> Singleton<Led1>::GetInstance()
         8   -> Singleton<UserButton>::GetInstance()
      16   utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
        16   -> __aeabi_assert
        16   -> __iar_EmptyStepPoint
      16   utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
        16   -> __aeabi_assert
        16   -> __iar_EmptyStepPoint
      16   utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
        16   -> __aeabi_assert
        16   -> __iar_EmptyStepPoint


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  Button::Button(IPort &)
      16  Button::IsPressed() const
       8  Button::subobject Button(IPort &)
      12  Delay(tU32)
      14  GpioPort<13UL>::Clear()
      26  GpioPort<13UL>::GetState() const
      28  GpioPort<13UL>::GpioPort(GPIO_TypeDef &)
      14  GpioPort<13UL>::Set()
      34  GpioPort<13UL>::SetMode(PortMode)
      14  GpioPort<13UL>::Toggle()
       8  GpioPort<13UL>::subobject GpioPort(GPIO_TypeDef &)
      14  GpioPort<5UL>::Clear()
      26  GpioPort<5UL>::GetState() const
      28  GpioPort<5UL>::GpioPort(GPIO_TypeDef &)
      14  GpioPort<5UL>::Set()
      34  GpioPort<5UL>::SetMode(PortMode)
      14  GpioPort<5UL>::Toggle()
       8  GpioPort<5UL>::subobject GpioPort(GPIO_TypeDef &)
      28  GpioPortA<5UL>::GpioPortA()
      28  GpioPortC<13UL>::GpioPortC()
       2  IPort::IPort()
       8  IPort::subobject IPort()
      20  Led1::Led1()
       4  Led::Led(IPort &)
      16  Led::Toggle()
       8  Led::subobject Led(IPort &)
      32  Singleton<GpioPortA<5UL>>::GetInstance()
      32  Singleton<GpioPortC<13UL>>::GetInstance()
      32  Singleton<Led1>::GetInstance()
      32  Singleton<UserButton>::GetInstance()
      20  UserButton::UserButton()
     134  __low_level_init
       4  instance
       4  instance
       8  instance
       8  instance
      30  main
      44  utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
      44  utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
      48  utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
     748  -- Other

 
  28 bytes in section .bss
 744 bytes in section .rodata
 926 bytes in section .text
 
 224 bytes of CODE  memory (+ 702 bytes shared)
   0 bytes of CONST memory (+ 744 bytes shared)
   0 bytes of DATA  memory (+  28 bytes shared)

Errors: none
Warnings: 1
