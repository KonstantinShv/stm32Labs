###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         02/Sep/2018  00:41:44
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\main.cpp
#    Command line =  
#        -f C:\Users\Sergey\AppData\Local\Temp\EWB7F1.tmp
#        (E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\main.cpp -D NDEBUG -lcN
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\List -lb
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\List -o
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Application\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Common\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\GpioPort\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\IrqController\
#        -I E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\CMSIS\ -On --c++
#        --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\List\main.lst
#    Object file  =  
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\Obj\main.o
#
###############################################################################

E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\main.cpp
      1          #include "CMSIS/stm32f411xe.h"
      2          #include "leds.hpp"
      3          #include "userbutton.hpp"
      4          #include "ledscontroller.hpp"
      5          
      6          extern "C" 
      7          {
      8            int __low_level_init(void) 
      9            {
     10              //Switch on external 16 MHz oscilator    
     11              RCC->CR |= RCC_CR_HSION;
     12              while ((RCC->CR & RCC_CR_HSIRDY) != RCC_CR_HSIRDY) 
     13              {
     14              }
     15              //Swicth system clock on extrenal oscilator
     16              RCC->CFGR |= RCC_CFGR_SW_HSI;
     17              while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI) 
     18              {
     19              }
     20              //Swicth on clock on PortA and PortC 
     21              RCC->AHB1ENR |= (RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIOAEN);
     22              RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN ;
     23              //LED1 on PortA.5, set PortA.5 as output
     24              GPIOA->MODER |= GPIO_MODER_MODE5_0;
     25              //LED2 on PortC.9, LED3 on PortC.8, LED4 on PortC.5 set PortC.5,8,9 as output 
     26              GPIOC->MODER |= (GPIO_MODER_MODE9_0 | GPIO_MODER_MODE5_0 | GPIO_MODER_MODE8_0);
     27              
     28              return 1;
     29            }
     30          }
     31          
     32          
     33          void Delay(tU32 duration)
     34          {
     35            for (tU32 i = 0U; i < duration; i++)
     36            {    
     37              __NOP();
     38            }
     39          }
     40          
     41          
     42          int main()
     43          {
     44            using utils::operator""msec;
     45            UserButton const & btn = UserButton::GetInstance();
     46            LedsController & ledsCntr = LedsController::GetInstance();
     47            for(;;)
     48            {
     49              if (btn.IsPressed())
     50              {
     51                ledsCntr.NextMode();
     52              } 
     53              Delay(250msec);
     54              ledsCntr.Update();
     55            }
     56            return 0;
     57          }
     58          
     59          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Button::Button(IPort &)
       8   Button::IsPressed() const
         8   -- Indirect call
       8   Button::subobject Button(IPort &)
         8   -> Button::Button(IPort &)
       0   Delay(tU32)
       8   GpioPort<13UL>::Clear()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<13UL>::GetState() const
         8   -> utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
      16   GpioPort<13UL>::GpioPort(GPIO_TypeDef &)
        16   -> IPort::subobject IPort()
       8   GpioPort<13UL>::Set()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   GpioPort<13UL>::SetMode(PortMode)
       8   GpioPort<13UL>::Toggle()
         8   -> utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<13UL>::subobject GpioPort(GPIO_TypeDef &)
         8   -> GpioPort<13UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPort<5UL>::Clear()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<5UL>::GetState() const
         8   -> utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
      16   GpioPort<5UL>::GpioPort(GPIO_TypeDef &)
        16   -> IPort::subobject IPort()
       8   GpioPort<5UL>::Set()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   GpioPort<5UL>::SetMode(PortMode)
       8   GpioPort<5UL>::Toggle()
         8   -> utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<5UL>::subobject GpioPort(GPIO_TypeDef &)
         8   -> GpioPort<5UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPort<8UL>::Clear()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<8UL>::GetState() const
         8   -> utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
      16   GpioPort<8UL>::GpioPort(GPIO_TypeDef &)
        16   -> IPort::subobject IPort()
       8   GpioPort<8UL>::Set()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   GpioPort<8UL>::SetMode(PortMode)
       8   GpioPort<8UL>::Toggle()
         8   -> utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<8UL>::subobject GpioPort(GPIO_TypeDef &)
         8   -> GpioPort<8UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPort<9UL>::Clear()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<9UL>::GetState() const
         8   -> utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
      16   GpioPort<9UL>::GpioPort(GPIO_TypeDef &)
        16   -> IPort::subobject IPort()
       8   GpioPort<9UL>::Set()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   GpioPort<9UL>::SetMode(PortMode)
       8   GpioPort<9UL>::Toggle()
         8   -> utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<9UL>::subobject GpioPort(GPIO_TypeDef &)
         8   -> GpioPort<9UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPortA<5UL>::GpioPortA()
         8   -> GpioPort<5UL>::subobject GpioPort(GPIO_TypeDef &)
       8   GpioPortC<13UL>::GpioPortC()
         8   -> GpioPort<13UL>::subobject GpioPort(GPIO_TypeDef &)
       8   GpioPortC<5UL>::GpioPortC()
         8   -> GpioPort<5UL>::subobject GpioPort(GPIO_TypeDef &)
       8   GpioPortC<8UL>::GpioPortC()
         8   -> GpioPort<8UL>::subobject GpioPort(GPIO_TypeDef &)
       8   GpioPortC<9UL>::GpioPortC()
         8   -> GpioPort<9UL>::subobject GpioPort(GPIO_TypeDef &)
       0   IPort::IPort()
       8   IPort::subobject IPort()
         8   -> IPort::IPort()
       0   Led::Led(IPort &)
       8   Led::SwitchOff()
         8   -- Indirect call
       8   Led::SwitchOn()
         8   -- Indirect call
       8   Led::Toggle()
         8   -- Indirect call
       8   LedsController::LedsController()
         8   -> Singleton<LedsModeAdc>::GetInstance()
         8   -> Singleton<LedsModeAll>::GetInstance()
         8   -> Singleton<LedsModeChess>::GetInstance()
         8   -> Singleton<LedsModeFirstPair>::GetInstance()
         8   -> Singleton<LedsModeInsideOutside>::GetInstance()
         8   -> Singleton<LedsModeTree>::GetInstance()
         8   -> std::reference_wrapper<LedsMode>::reference_wrapper(LedsMode &)
       8   LedsController::NextMode()
         8   -- Indirect call
         8   -> std::array<std::reference_wrapper<LedsMode>, 6U>::operator[](size_t)
         8   -> std::array<std::reference_wrapper<LedsMode>, 6U>::size() const
         8   -> std::reference_wrapper<LedsMode>::get() const
      16   LedsController::Update(tU8)
        16   -- Indirect call
        16   -> std::array<std::reference_wrapper<LedsMode>, 6U>::operator[](size_t)
        16   -> std::reference_wrapper<LedsMode>::get() const
      16   LedsDriver::GetLed(LedNum)
        16   -> std::array<Led, 4U>::operator[](size_t)
       8   LedsDriver::GetLedsCount()
         8   -> std::array<Led, 4U>::size() const
       8   LedsDriver::LedsDriver()
         8   -> Led::Led(IPort &)
         8   -> Singleton<GpioPortA<5UL>>::GetInstance()
         8   -> Singleton<GpioPortC<5UL>>::GetInstance()
         8   -> Singleton<GpioPortC<8UL>>::GetInstance()
         8   -> Singleton<GpioPortC<9UL>>::GetInstance()
      24   LedsDriver::SwitchOffAll()
        24   -> Led::SwitchOff()
        24   -> std::_Array_const_iterator<Led, 4U>::operator!=(std::_Array_const_iterator<Led, 4U> const &) const
        24   -> std::_Array_iterator<Led, 4U>::operator*() const
        24   -> std::_Array_iterator<Led, 4U>::operator++()
        24   -> std::array<Led, 4U>::begin()
        24   -> std::array<Led, 4U>::end()
      24   LedsDriver::ToggleAll()
        24   -> Led::Toggle()
        24   -> std::_Array_const_iterator<Led, 4U>::operator!=(std::_Array_const_iterator<Led, 4U> const &) const
        24   -> std::_Array_iterator<Led, 4U>::operator*() const
        24   -> std::_Array_iterator<Led, 4U>::operator++()
        24   -> std::array<Led, 4U>::begin()
        24   -> std::array<Led, 4U>::end()
      16   LedsMode::Do(tU8)
        16   -> LedsDriver::ToggleAll()
        16   -> Singleton<LedsDriver>::GetInstance()
       0   LedsMode::LedsMode()
       8   LedsMode::Reset()
         8   -> LedsDriver::SwitchOffAll()
         8   -> Singleton<LedsDriver>::GetInstance()
       8   LedsMode::subobject LedsMode()
         8   -> LedsMode::LedsMode()
      24   LedsModeAdc::Do(tU8)
        24   -> Led::SwitchOff()
        24   -> Led::SwitchOn()
        24   -> LedsDriver::GetLed(LedNum)
        24   -> LedsDriver::GetLedsCount()
        24   -> Singleton<LedsDriver>::GetInstance()
       8   LedsModeAdc::LedsModeAdc()
         8   -> LedsMode::subobject LedsMode()
       8   LedsModeAll::LedsModeAll()
         8   -> LedsMode::subobject LedsMode()
       8   LedsModeChess::LedsModeChess()
         8   -> LedsMode::subobject LedsMode()
      16   LedsModeChess::Reset()
        16   -> Led::SwitchOn()
        16   -> LedsDriver::GetLed(LedNum)
        16   -> LedsDriver::SwitchOffAll()
        16   -> Singleton<LedsDriver>::GetInstance()
       8   LedsModeFirstPair::LedsModeFirstPair()
         8   -> LedsMode::subobject LedsMode()
      16   LedsModeFirstPair::Reset()
        16   -> Led::SwitchOn()
        16   -> LedsDriver::GetLed(LedNum)
        16   -> LedsDriver::SwitchOffAll()
        16   -> Singleton<LedsDriver>::GetInstance()
       8   LedsModeInsideOutside::LedsModeInsideOutside()
         8   -> LedsMode::subobject LedsMode()
      16   LedsModeInsideOutside::Reset()
        16   -> Led::SwitchOn()
        16   -> LedsDriver::GetLed(LedNum)
        16   -> LedsDriver::SwitchOffAll()
        16   -> Singleton<LedsDriver>::GetInstance()
      16   LedsModeTree::Do(tU8)
        16   -> Led::Toggle()
        16   -> LedsDriver::GetLed(LedNum)
        16   -> LedsDriver::GetLedsCount()
        16   -> Singleton<LedsDriver>::GetInstance()
       8   LedsModeTree::LedsModeTree()
         8   -> LedsMode::subobject LedsMode()
       8   Singleton<GpioPortA<5UL>>::GetInstance()
         8   -> GpioPortA<5UL>::GpioPortA()
       8   Singleton<GpioPortC<13UL>>::GetInstance()
         8   -> GpioPortC<13UL>::GpioPortC()
       8   Singleton<GpioPortC<5UL>>::GetInstance()
         8   -> GpioPortC<5UL>::GpioPortC()
       8   Singleton<GpioPortC<8UL>>::GetInstance()
         8   -> GpioPortC<8UL>::GpioPortC()
       8   Singleton<GpioPortC<9UL>>::GetInstance()
         8   -> GpioPortC<9UL>::GpioPortC()
       8   Singleton<LedsController>::GetInstance()
         8   -> LedsController::LedsController()
       8   Singleton<LedsDriver>::GetInstance()
         8   -> LedsDriver::LedsDriver()
       8   Singleton<LedsModeAdc>::GetInstance()
         8   -> LedsModeAdc::LedsModeAdc()
       8   Singleton<LedsModeAll>::GetInstance()
         8   -> LedsModeAll::LedsModeAll()
       8   Singleton<LedsModeChess>::GetInstance()
         8   -> LedsModeChess::LedsModeChess()
       8   Singleton<LedsModeFirstPair>::GetInstance()
         8   -> LedsModeFirstPair::LedsModeFirstPair()
       8   Singleton<LedsModeInsideOutside>::GetInstance()
         8   -> LedsModeInsideOutside::LedsModeInsideOutside()
       8   Singleton<LedsModeTree>::GetInstance()
         8   -> LedsModeTree::LedsModeTree()
       8   Singleton<UserButton>::GetInstance()
         8   -> UserButton::UserButton()
       8   UserButton::UserButton()
         8   -> Button::subobject Button(IPort &)
         8   -> Singleton<GpioPortC<13UL>>::GetInstance()
       0   __low_level_init
      16   main
        16   -> Button::IsPressed() const
        16   -> Delay(tU32)
        16   -> LedsController::NextMode()
        16   -> LedsController::Update(tU8)
        16   -> Singleton<LedsController>::GetInstance()
        16   -> Singleton<UserButton>::GetInstance()
       0   std::_Addressof<Led>(Led &, std::false_type)
       0   std::_Addressof<LedsMode>(LedsMode &, std::false_type)
       0   std::_Array_const_iterator<Led, 4U>::_Array_const_iterator(Led const *, size_t)
      16   std::_Array_const_iterator<Led, 4U>::operator!=(std::_Array_const_iterator<Led, 4U> const &) const
        16   -> std::_Array_const_iterator<Led, 4U>::operator==(std::_Array_const_iterator<Led, 4U> const &) const
       0   std::_Array_const_iterator<Led, 4U>::operator*() const
       0   std::_Array_const_iterator<Led, 4U>::operator++()
       0   std::_Array_const_iterator<Led, 4U>::operator==(std::_Array_const_iterator<Led, 4U> const &) const
       8   std::_Array_const_iterator<Led, 4U>::subobject _Array_const_iterator(Led const *, size_t)
         8   -> std::_Array_const_iterator<Led, 4U>::_Array_const_iterator(Led const *, size_t)
      16   std::_Array_iterator<Led, 4U>::_Array_iterator(Led *, size_t)
        16   -> std::_Array_const_iterator<Led, 4U>::subobject _Array_const_iterator(Led const *, size_t)
       8   std::_Array_iterator<Led, 4U>::operator*() const
         8   -> std::_Array_const_iterator<Led, 4U>::operator*() const
       8   std::_Array_iterator<Led, 4U>::operator++()
         8   -> std::_Array_const_iterator<Led, 4U>::operator++()
       8   std::addressof<Led>(Led &)
         8   -> std::_Addressof<Led>(Led &, std::false_type)
       8   std::addressof<LedsMode>(LedsMode &)
         8   -> std::_Addressof<LedsMode>(LedsMode &, std::false_type)
      16   std::array<Led, 4U>::begin()
        16   -> std::_Array_iterator<Led, 4U>::_Array_iterator(Led *, size_t)
        16   -> std::addressof<Led>(Led &)
      16   std::array<Led, 4U>::end()
        16   -> std::_Array_iterator<Led, 4U>::_Array_iterator(Led *, size_t)
        16   -> std::addressof<Led>(Led &)
       0   std::array<Led, 4U>::operator[](size_t)
       0   std::array<Led, 4U>::size() const
       0   std::array<std::reference_wrapper<LedsMode>, 6U>::operator[](size_t)
       0   std::array<std::reference_wrapper<LedsMode>, 6U>::size() const
       0   std::reference_wrapper<LedsMode>::get() const
      16   std::reference_wrapper<LedsMode>::reference_wrapper(LedsMode &)
        16   -> std::addressof<LedsMode>(LedsMode &)
       0   utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
       0   utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  Button::Button(IPort &)
      16  Button::IsPressed() const
      12  Button::subobject Button(IPort &)
      14  Delay(tU32)
      16  GpioPort<13UL>::Clear()
      28  GpioPort<13UL>::GetState() const
      28  GpioPort<13UL>::GpioPort(GPIO_TypeDef &)
      16  GpioPort<13UL>::Set()
      34  GpioPort<13UL>::SetMode(PortMode)
      16  GpioPort<13UL>::Toggle()
      12  GpioPort<13UL>::subobject GpioPort(GPIO_TypeDef &)
      16  GpioPort<5UL>::Clear()
      28  GpioPort<5UL>::GetState() const
      28  GpioPort<5UL>::GpioPort(GPIO_TypeDef &)
      16  GpioPort<5UL>::Set()
      34  GpioPort<5UL>::SetMode(PortMode)
      16  GpioPort<5UL>::Toggle()
      12  GpioPort<5UL>::subobject GpioPort(GPIO_TypeDef &)
      16  GpioPort<8UL>::Clear()
      28  GpioPort<8UL>::GetState() const
      28  GpioPort<8UL>::GpioPort(GPIO_TypeDef &)
      16  GpioPort<8UL>::Set()
      34  GpioPort<8UL>::SetMode(PortMode)
      16  GpioPort<8UL>::Toggle()
      12  GpioPort<8UL>::subobject GpioPort(GPIO_TypeDef &)
      16  GpioPort<9UL>::Clear()
      28  GpioPort<9UL>::GetState() const
      28  GpioPort<9UL>::GpioPort(GPIO_TypeDef &)
      16  GpioPort<9UL>::Set()
      34  GpioPort<9UL>::SetMode(PortMode)
      16  GpioPort<9UL>::Toggle()
      12  GpioPort<9UL>::subobject GpioPort(GPIO_TypeDef &)
      28  GpioPortA<5UL>::GpioPortA()
      28  GpioPortC<13UL>::GpioPortC()
      28  GpioPortC<5UL>::GpioPortC()
      28  GpioPortC<8UL>::GpioPortC()
      28  GpioPortC<9UL>::GpioPortC()
       2  IPort::IPort()
      12  IPort::subobject IPort()
       4  Led::Led(IPort &)
      16  Led::SwitchOff()
      16  Led::SwitchOn()
      16  Led::Toggle()
      94  LedsController::LedsController()
      46  LedsController::NextMode()
      30  LedsController::Update(tU8)
      18  LedsDriver::GetLed(LedNum)
      14  LedsDriver::GetLedsCount()
      60  LedsDriver::LedsDriver()
      60  LedsDriver::SwitchOffAll()
      60  LedsDriver::ToggleAll()
      16  LedsMode::Do(tU8)
      16  LedsMode::LedsMode()
      18  LedsMode::Reset()
      12  LedsMode::subobject LedsMode()
      64  LedsModeAdc::Do(tU8)
      24  LedsModeAdc::LedsModeAdc()
      24  LedsModeAll::LedsModeAll()
      24  LedsModeChess::LedsModeChess()
      46  LedsModeChess::Reset()
      24  LedsModeFirstPair::LedsModeFirstPair()
      46  LedsModeFirstPair::Reset()
      24  LedsModeInsideOutside::LedsModeInsideOutside()
      46  LedsModeInsideOutside::Reset()
      50  LedsModeTree::Do(tU8)
      24  LedsModeTree::LedsModeTree()
      32  Singleton<GpioPortA<5UL>>::GetInstance()
      32  Singleton<GpioPortC<13UL>>::GetInstance()
      32  Singleton<GpioPortC<5UL>>::GetInstance()
      32  Singleton<GpioPortC<8UL>>::GetInstance()
      32  Singleton<GpioPortC<9UL>>::GetInstance()
      32  Singleton<LedsController>::GetInstance()
      32  Singleton<LedsDriver>::GetInstance()
      32  Singleton<LedsModeAdc>::GetInstance()
      32  Singleton<LedsModeAll>::GetInstance()
      32  Singleton<LedsModeChess>::GetInstance()
      32  Singleton<LedsModeFirstPair>::GetInstance()
      32  Singleton<LedsModeInsideOutside>::GetInstance()
      32  Singleton<LedsModeTree>::GetInstance()
      32  Singleton<UserButton>::GetInstance()
      20  UserButton::UserButton()
      78  __low_level_init
       4  instance
       8  instance
       8  instance
       8  instance
       8  instance
       8  instance
       8  instance
       8  instance
       8  instance
       8  instance
       8  instance
       8  instance
      16  instance
      28  instance
      46  main
       2  std::_Addressof<Led>(Led &, std::false_type)
       2  std::_Addressof<LedsMode>(LedsMode &, std::false_type)
       8  std::_Array_const_iterator<Led, 4U>::_Array_const_iterator(Led const *, size_t)
      28  std::_Array_const_iterator<Led, 4U>::operator!=(std::_Array_const_iterator<Led, 4U> const &) const
       4  std::_Array_const_iterator<Led, 4U>::operator*() const
       8  std::_Array_const_iterator<Led, 4U>::operator++()
      18  std::_Array_const_iterator<Led, 4U>::operator==(std::_Array_const_iterator<Led, 4U> const &) const
      12  std::_Array_const_iterator<Led, 4U>::subobject _Array_const_iterator(Led const *, size_t)
      22  std::_Array_iterator<Led, 4U>::_Array_iterator(Led *, size_t)
      12  std::_Array_iterator<Led, 4U>::operator*() const
      14  std::_Array_iterator<Led, 4U>::operator++()
      12  std::addressof<Led>(Led &)
      12  std::addressof<LedsMode>(LedsMode &)
      24  std::array<Led, 4U>::begin()
      24  std::array<Led, 4U>::end()
       6  std::array<Led, 4U>::operator[](size_t)
       6  std::array<Led, 4U>::size() const
       6  std::array<std::reference_wrapper<LedsMode>, 6U>::operator[](size_t)
       6  std::array<std::reference_wrapper<LedsMode>, 6U>::size() const
       4  std::reference_wrapper<LedsMode>::get() const
      18  std::reference_wrapper<LedsMode>::reference_wrapper(LedsMode &)
      10  utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
       8  utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
      12  utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
    1542  -- Other

 
   150 bytes in section .bss
 1 528 bytes in section .rodata
 2 590 bytes in section .text
 
 166 bytes of CODE  memory (+ 2 424 bytes shared)
   0 bytes of CONST memory (+ 1 528 bytes shared)
   0 bytes of DATA  memory (+   150 bytes shared)

Errors: none
Warnings: 1
