###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         30/Aug/2018  15:15:01
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Application\ledscontroller.cpp
#    Command line =  
#        -f C:\Users\Sergey\AppData\Local\Temp\EWF33F.tmp
#        (E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Application\ledscontroller.cpp
#        -D NDEBUG -lcN
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\List -lb
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\List -o
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\Obj --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Application\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Common\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\GpioPort\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\IrqController\
#        -I E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\CMSIS\ -Oh --c++
#        --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\List\ledscontroller.lst
#    Object file  =  
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\Obj\ledscontroller.o
#
###############################################################################

E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Application\ledscontroller.cpp
      1          /*******************************************************************************
      2          *  FILENAME: ledscontroller.cpp
      3          *
      4          *  SUSU
      5          *  Author: Sergey Kolody
      6          *
      7          *******************************************************************************/
      8          #include "ledscontroller.hpp" 
      9          #include "ledsdriver.hpp"
     10          
     11          /*******************************************************************************
     12          * Function:  nextStep
     13          * Description: 
     14          * Threading usage and Assumptions:  none
     15          ******************************************************************************/
     16          void LedsController::Update(tU8 value) 
     17          {
     18            LedDriver & ledsDriver = LedDriver::GetInstance();
     19            switch  (mode)
     20            {
     21            case LedsMode::tree:    
     22                  ledsDriver.GetLed(static_cast<LedNum>(currentLed)).Toggle();
     23                  currentLed++;
     24                  if (currentLed >= ledsDriver.GetLedsCount())
     25                  {
     26                    currentLed = 0U;
     27                  }
     28                break;
     29              case LedsMode::myMode:
     30                  if (currentLed % 2U == 0U)
     31                  {
     32                    ledsDriver.GetLed(LedNum::led1).SwitchOn();
     33                    ledsDriver.GetLed(LedNum::led3).SwitchOn();
     34                    ledsDriver.GetLed(LedNum::led2).SwitchOff();
     35                    ledsDriver.GetLed(LedNum::led4).SwitchOff();          
     36                  } else 
     37                  {
     38                    ledsDriver.GetLed(LedNum::led1).SwitchOff();
     39                    ledsDriver.GetLed(LedNum::led3).SwitchOff();
     40                    ledsDriver.GetLed(LedNum::led2).SwitchOn();
     41                    ledsDriver.GetLed(LedNum::led4).SwitchOn();                    
     42                  }        
     43                  currentLed++;        
     44                break;
     45                case LedsMode::all:  
     46                  ledsDriver.ToggleAll();
     47                break;
     48              case LedsMode::adcMode:
     49                   for (tU32 i = 0U; i < ledsDriver.GetLedsCount(); i++)
     50                   {
     51                     if (i <= value)
     52                     {
     53                      ledsDriver.GetLed(static_cast<LedNum>(i)).SwitchOn();
     54                     } else
     55                     {
     56                       ledsDriver.GetLed(static_cast<LedNum>(i)).SwitchOff();
     57                     }
     58                   }   
     59                break;  
     60              default:
     61              break;
     62            }
     63          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   GpioPort<5UL>::Clear()
       0   GpioPort<5UL>::GetState() const
       0   GpioPort<5UL>::Set()
       0   GpioPort<5UL>::SetMode(PortMode)
       0   GpioPort<5UL>::Toggle()
       0   GpioPort<8UL>::Clear()
       0   GpioPort<8UL>::GetState() const
       0   GpioPort<8UL>::Set()
       0   GpioPort<8UL>::SetMode(PortMode)
       0   GpioPort<8UL>::Toggle()
       0   GpioPort<9UL>::Clear()
       0   GpioPort<9UL>::GetState() const
       0   GpioPort<9UL>::Set()
       0   GpioPort<9UL>::SetMode(PortMode)
       0   GpioPort<9UL>::Toggle()
       4   LedDriver::LedDriver()
      16   LedsController::Update(tU8)
        16   -- Indirect call
        16   -> LedDriver::LedDriver()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      10  GpioPort<5UL>::Clear()
      16  GpioPort<5UL>::GetState() const
       8  GpioPort<5UL>::Set()
      26  GpioPort<5UL>::SetMode(PortMode)
      14  GpioPort<5UL>::Toggle()
      10  GpioPort<8UL>::Clear()
      16  GpioPort<8UL>::GetState() const
      10  GpioPort<8UL>::Set()
      26  GpioPort<8UL>::SetMode(PortMode)
      14  GpioPort<8UL>::Toggle()
      10  GpioPort<9UL>::Clear()
      16  GpioPort<9UL>::GetState() const
      10  GpioPort<9UL>::Set()
      26  GpioPort<9UL>::SetMode(PortMode)
      14  GpioPort<9UL>::Toggle()
     180  LedDriver::LedDriver()
     212  LedsController::Update(tU8)
       8  instance
       8  instance
       8  instance
       8  instance
      16  instance
     693  -- Other

 
  53 bytes in section .bss
 688 bytes in section .rodata
 618 bytes in section .text
 
 212 bytes of CODE  memory (+ 406 bytes shared)
   0 bytes of CONST memory (+ 688 bytes shared)
   0 bytes of DATA  memory (+  53 bytes shared)

Errors: none
Warnings: none
