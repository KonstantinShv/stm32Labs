###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         02/Sep/2018  01:26:05
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\IrqController\irqcontroller.cpp
#    Command line =  
#        -f C:\Users\Sergey\AppData\Local\Temp\EW5508.tmp
#        (E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\IrqController\irqcontroller.cpp
#        -D NDEBUG -lcN
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\List -lb
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\List -o
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "D:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.1\arm\inc\c\DLib_Config_Normal.h" -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Application\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Common\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\GpioPort\ -I
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\IrqController\
#        -I E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\CMSIS\ -On --c++
#        --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\List\irqcontroller.lst
#    Object file  =  
#        E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\Debug\Obj\irqcontroller.o
#
###############################################################################

E:\Projects\ARM_LAB\stm32Labs\LabAdcLedsBegin\AHardware\IrqController\irqcontroller.cpp
      1          //
      2          // Created by Sergey on 27.08.2018.
      3          //
      4          #include "irqcontroller.hpp"
      5          #include "userbutton.hpp"
      6          void IrqController::HandleIrqExtiLine15_10()
      7          {
      8            EXTI->PR = EXTI_PR_PR13 ;  
      9            UserButton::GetInstance().HandleInterrupt();
     10          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Button::Button(IPort &)
       8   Button::subobject Button(IPort &)
         8   -> Button::Button(IPort &)
       8   GpioPort<13UL>::Clear()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<13UL>::GetState() const
         8   -> utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
      16   GpioPort<13UL>::GpioPort(GPIO_TypeDef &)
        16   -> IPort::subobject IPort()
       8   GpioPort<13UL>::Set()
         8   -> utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   GpioPort<13UL>::SetMode(PortMode)
       8   GpioPort<13UL>::Toggle()
         8   -> utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       8   GpioPort<13UL>::subobject GpioPort(GPIO_TypeDef &)
         8   -> GpioPort<13UL>::GpioPort(GPIO_TypeDef &)
       8   GpioPortC<13UL>::GpioPortC()
         8   -> GpioPort<13UL>::subobject GpioPort(GPIO_TypeDef &)
       0   IPort::IPort()
       8   IPort::subobject IPort()
         8   -> IPort::IPort()
       8   IrqController::HandleIrqExtiLine15_10()
         8   -> Singleton<UserButton>::GetInstance()
         8   -> UserButton::HandleInterrupt()
       8   Singleton<GpioPortC<13UL>>::GetInstance()
         8   -> GpioPortC<13UL>::GpioPortC()
       8   Singleton<UserButton>::GetInstance()
         8   -> UserButton::UserButton()
       0   UserButton::HandleInterrupt()
       8   UserButton::UserButton()
         8   -> Button::subobject Button(IPort &)
         8   -> Singleton<GpioPortC<13UL>>::GetInstance()
       0   utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
       0   utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
       0   utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  Button::Button(IPort &)
      12  Button::subobject Button(IPort &)
      16  GpioPort<13UL>::Clear()
      28  GpioPort<13UL>::GetState() const
      28  GpioPort<13UL>::GpioPort(GPIO_TypeDef &)
      16  GpioPort<13UL>::Set()
      34  GpioPort<13UL>::SetMode(PortMode)
      16  GpioPort<13UL>::Toggle()
      12  GpioPort<13UL>::subobject GpioPort(GPIO_TypeDef &)
      28  GpioPortC<13UL>::GpioPortC()
       2  IPort::IPort()
      12  IPort::subobject IPort()
      24  IrqController::HandleIrqExtiLine15_10()
      32  Singleton<GpioPortC<13UL>>::GetInstance()
      32  Singleton<UserButton>::GetInstance()
       2  UserButton::HandleInterrupt()
      20  UserButton::UserButton()
       4  instance
       8  instance
      10  utils::checkBit<uint32_t volatile, tU32>(uint32_t const volatile &, tU32)
       8  utils::setBitValue<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
      12  utils::toggleBit<uint32_t volatile, tU32>(uint32_t volatile &, tU32)
     198  -- Other

 
  14 bytes in section .bss
 196 bytes in section .rodata
 348 bytes in section .text
 
 24 bytes of CODE  memory (+ 324 bytes shared)
  0 bytes of CONST memory (+ 196 bytes shared)
  0 bytes of DATA  memory (+  14 bytes shared)

Errors: none
Warnings: none
